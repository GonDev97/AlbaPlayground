export const WELCOME_MESSAGE = "Per l'activitat d'avui, repassarem els conceptes bàsics de rxjs, per fer-ho, farem una sèrie de petits exercicis on utilitzarem la teva API preferida (o almenys, la d'en Joel). A cada apartat trobaràs la informació necessària i els passos a seguir, també pots buscar la informació que necessitis, com si estiguèssis a un projecte real, molta sort!"

export const EXERCICI_1 = "Per començar amb una cosa sencilla, cada cop que el botó es mostra per pantalla, es fa una petició de getCountries, hauriem de bloquejar mitjançant rxjs que fins que no hagi acabat aquesta crida, no es pugui tornar a fer una altra petició. Només has de tocar la funció listenClicks (molt mal feta) "

export const EXERCICI_2 = "Ara que ja tens una mica més de pràctica amb rxjs, et proposem un repte més complicat. Has de fer que cada cop que es faci click al botó, es faci una petició de getCountries, però aquesta petició s'ha de fer cada 5 segons, i s'ha de cancel·lar si es torna a fer click al botó. Només has de tocar la funció listenClicks (molt mal feta)"

export const EXERCICI_3 = "Sembla que el tema dels buttons el tenim controlat, ara anem a pels formularis. Veuràs que tenim dos selectors, un de noms i un altre cognoms, has d'escoltar els dos camps del formulari i quan els dos tinguin un valor seleccionat, només si el nom o el cognom és d'uns dels becaris que ha portat en Gon, actualitzar la variable nomFinal amb el nom i el cognom seleccionats i no escoltar més canvis! Només has de tocar la funció listenChanges (no implementada)"

export const EXERCICI_4 = "Anem amb l'exercici més famòs d'rxjs, l'autocomplete! Necessitem que a mesura que l'usuari escrigui, es faci una petició 'getCountryByName' amb el valor de l'input, com és el teu primer autocomplete, et donarem unes pautes a seguir: No ha de fer la búsqueda si el text introduit és el mateix que l'anterior (operador propi), ha d'esperar 300ms de debounce time, no ha de fer la crida si només hi ha una lletra o cap escrita, i, per suposat, ha de cancel·lar la crida anterior si s'ha modificat l'input! A por ello! Bonus: Veuràs que un cop seleccionada una opció, es fa una crida amb el nom complet del country seleccionat, hi ha alguna manera d'evitar això? (Paciéncia que la API es lenta de cojones)"

export const EXERCICI_5 = "Després de suar la gota gorda amb l'anterior, anem a fer un més facilillo però que ens hi trobem molt! Tenim un botó que obre un diàleg, volem fer una petició getCountries només si l'usuari ha clicat l'opció correcte (hauràs d'esbrinar quina és, que veo que no está muy claro jeje). En aquest cas, hauràs també de buscar com obrir el matDialog, el component a obrir es el ConfirmationDialogComponent! En un moment determinat has de triar el width del dialog, ha de ser '50%'. Bonus track: Veuràs que dintre del camp 'name' de Country, hi ha el camp 'official', és una mica cansat que hagi de fer country.name.official per trobar-ho, podríem fer que el que retornés la crida tingués un camp official al primer nivell de l'objecte? (sí, podem jejejijú) "